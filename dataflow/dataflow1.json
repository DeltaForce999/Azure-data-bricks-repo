{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "adf_sales_dataset",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "adf_sales_02",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "varuninsink",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "surrogateKey1"
				},
				{
					"name": "surrogateKey2"
				},
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SalesMonth as string,",
				"          Retailer as string,",
				"          Product as string,",
				"          SalesValueUSD as string,",
				"          UnitsSold as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          Retailer as string,",
				"          SkuCode as string,",
				"          Product as string,",
				"          SalesMonth as string,",
				"          SalesValue as string,",
				"          UnitsSold as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source1 keyGenerate(output(varun as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"source2 keyGenerate(output(arika as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey2",
				"surrogateKey1, surrogateKey2 join(varun == arika,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SalesMonth as string,",
				"          Retailer as string,",
				"          Product as string,",
				"          SalesValueUSD as string,",
				"          UnitsSold as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}